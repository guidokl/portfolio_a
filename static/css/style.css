/* Units quick guide (how CSS lengths behave)
  - px  : Device-agnostic pixel unit. Absolute; does not scale with font size.
  - em  : Relative to the font-size of the current element (1em = element font-size).
    Padding/margins in em scale when the element's font-size changes.
  - rem : Relative to the root (html) font-size (1rem = html font-size). Stable across components.
  - %   : Relative to the parent box (for width/height) or to own font-size (for line-height if unitless).
  - vw  : 1% of the viewport width. Responsive to window width.
  - vh  : 1% of the viewport height. Responsive to window height.
  - fr  : Grid fractional unit. Distributes leftover space among grid tracks in CSS Grid.
    Example: grid-template-columns: 1fr 2fr; -> 1/3 and 2/3 of free space.
  - ch  : Width of the "0" glyph in the element's font. Useful for character-based widths.
  Notes:
  - Prefer rem for consistent spacing and sizing; use em for component-internal scaling.
  - Combine units with calc() when needed, e.g., calc(100% - 2rem).
*/

/* Minimal CSS: local font, light/dark theme, layout, nav, resume, contact */

/* 1) Local JetBrains Mono */
@font-face {
  font-family: "JetBrains Mono";
  src: url("../fonts/JetBrainsMono-VariableFont_wght.ttf") format("truetype");
  font-weight: 100 800;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "JetBrains Mono";
  src: url("../fonts/JetBrainsMono-Italic-VariableFont_wght.ttf") format("truetype");
  font-weight: 100 800;
  font-style: italic;
  font-display: swap;
}

/* 2) Theme (light default, dark override) */
:root {
  --bg: #f6f7fb;
  --surface: #fff;
  --text: #1f2933;
  --muted: #5f6c77;
  --border: #e5e7eb;
  --primary: #0f8b8d;
  --accent: #8e2a3b;
  --container: 1100px;
  --radius: 8px;
}

/* Apply these styles to the <html> element when it has the attribute data-theme="dark" */
html[data-theme="dark"] {
  --bg: #0f1216;
  --surface: #171a1f;
  --text: #e6e8ea;
  --muted: #a3abb3;
  --border: #242a31;
  --primary: #0aa4a6;
  --accent: #b23a48;
}

/* 3) Base */
/* Use border-box so padding & borders stay inside set width/height.
   Prevents elements from "growing" larger than expected. */

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  /* system-ui = system default UI font; -apple-system ensures Safari/iOS support.
   Falls back to Segoe UI, Roboto, Helvetica, Arial, sans-serif. */
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial,
    sans-serif;
  color: var(--text);
  background: var(--bg);
  /* Unitless line-height = font-size Ã— 1.6, scales automatically with text size. */
  line-height: 1.6;
}

.jet {
  font-family: "JetBrains Mono", monospace;
}

/* Links & buttons */
a {
  color: var(--primary);
  /* Remove default link underline so we can style links manually. */
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.button {
  /* inline-block: flows like text but allows width/padding like a block. */
  display: inline-block;
  padding: 10px 14px;
  border: 1px solid var(--border);
  border-radius: 8px;
  background: var(--surface);
  color: var(--text);
  cursor: pointer;
}

.button.primary {
  background: var(--primary);
  color: #fff;
  border-color: transparent;
}

.icon-button {
  border: none;
  background: transparent;
  color: var(--text);
  font-size: 1.4rem;
  cursor: pointer;
}

/* 4) Layout */
.container {
  max-width: var(--container);
  margin: 0 auto;
  padding: 0 16px;
}

.section {
  padding: 48px 0;
}

.hero {
  padding: 64px 0;
}

/* 5) Header & nav */
.site-header {
  /* Header sticks to top when scrolling but keeps its place in flow */
  position: sticky;
  /* Stick at the very top of the viewport */
  top: 0;
  /* Ensure header stays above other content */
  z-index: 10;
  background: var(--surface);
  border-bottom: 1px solid var(--border);
  /* Use CSS Grid for header layout */
  display: grid;
  /* Logo | nav expands | icon | button */
  /* 4 cols: logo (auto), nav (fills), icon (auto), button (auto) */
  grid-template-columns: auto 1fr auto auto;
  /* Vertically center items in the grid */
  align-items: center;
  /* gap: space between grid/flex items (here 12px between header cells) */
  gap: 12px;
  padding: 8px 16px;
}

.brand {
  /* inline-flex: flexbox for child alignment, but container stays inline-sized. */
  display: inline-flex;
  align-items: center;
  gap: 10px;
}

.logo {
  width: 40px;
  height: 40px;
  /* contain: scale media to fit box while preserving aspect ratio (may add gaps). */
  object-fit: contain;
}

#navToggle {
  display: none;
}

.site-nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: inline-flex;
  gap: 16px;
}

.site-nav a.nav-link {
  display: inline-block;
  padding: 10px 12px;
  border-radius: 8px;
}

/* 6) Hero */
.hero-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 24px;
  align-items: center;
}

.hero-photo img {
  width: 100%;
  max-width: 280px;
  border-radius: 50%;
  display: block;
  margin-left: auto;
}

.lead {
  font-size: 1.1rem;
  color: var(--muted);
}

/* 7) Resume */
.filters {
  display: grid;
  gap: 12px;
  grid-template-columns: 1fr 1fr auto;
  align-items: end;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 12px;
  margin-bottom: 20px;
}

.filters fieldset {
  border: 0;
  padding: 10px;
  border-radius: 8px;
}

.cards {
  display: grid;
  gap: 16px;
  /* Create 3 equal-width columns (each takes 1 fraction of available space) */
  grid-template-columns: repeat(3, 1fr);
}

.card {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 16px;
}

.card .meta {
  color: var(--muted);
  font-size: 0.95rem;
}

.badge {
  display: inline-block;
  padding: 4px 8px;
  border-radius: 999px;
  font-size: 0.8rem;
  margin-right: 8px;
  background: var(--bg);
}

.badge.work {
  color: var(--primary);
}

.badge.edu {
  color: var(--accent);
}

/* 8) Contact */
.contact-form {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 16px;
  max-width: 680px;
}

.form-row {
  display: grid;
  gap: 6px;
  margin-bottom: 12px;
}

/* Attribute selector: style only inputs of a specific type (text, email, number)
  .form-row input[type="text"] = <input type="text"> inside .form-row */
.form-row input[type="text"],
.form-row input[type="email"],
.form-row input[type="number"],
.form-row textarea {
  width: 100%;
  padding: 10px;
  border-radius: 8px;
  border: 1px solid var(--border);
  background: var(--bg);
  color: var(--text);
}

.form-row input:focus,
.form-row textarea:focus {
  outline: 2px solid var(--primary);
}

.form-actions {
  display: flex;
  gap: 10px;
}

.error {
  color: var(--accent);
  min-height: 1em;
}

/* 9) Footer */
.site-footer {
  background: var(--surface);
  border-top: 1px solid var(--border);
  margin-top: 48px;
}

.footer-grid {
  padding: 16px 0;
  display: grid;
  grid-template-columns: 1fr auto auto;
  align-items: center;
  gap: 16px;
}

/* 11) Responsive */
@media (max-width: 820px) {
  .site-header {
    grid-template-columns: auto auto 1fr auto;
  }

  #navToggle {
    display: inline-block;
  }

  .site-nav {
    display: none;
    grid-column: 1/-1;
    padding-bottom: 8px;
  }

  .site-nav.open {
    display: block;
  }

  .site-nav ul {
    display: grid;
    grid-template-columns: 1fr;
    gap: 6px;
  }

  .hero-content {
    grid-template-columns: 1fr;
    text-align: center;
  }

  .hero-photo img {
    margin: 0 auto;
  }

  .cards {
    grid-template-columns: 1fr;
  }

  .filters {
    grid-template-columns: 1fr;
  }
}